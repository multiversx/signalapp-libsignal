name: Publish to NPM

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-11]
        include:
        - os: macos-11
          arm64-rust-target: aarch64-apple-darwin

    steps:
    - uses: actions/checkout@v3

    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal --target ${{ matrix.arm64-rust-target }}

    - name: Get Node version from .nvmrc
      id: get-nvm-version
      shell: bash
      run: echo "node-version=$(cat .nvmrc)" >> $GITHUB_OUTPUT

    - uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'

    - run: npx yarn install --ignore-scripts --frozen-lockfile
      working-directory: node

    - name: Build for arm64
      run: npx prebuildify --napi -t ${{ steps.get-nvm-version.outputs.node-version }} --arch arm64
      working-directory: node

    - name: Build for the host (should be x64)
      run: npx prebuildify --napi -t ${{ steps.get-nvm-version.outputs.node-version }}
      working-directory: node

    - name: Upload library
      uses: actions/upload-artifact@v3
      with:
        name: libsignal_client (${{matrix.os}})
        path: node/prebuilds/*
